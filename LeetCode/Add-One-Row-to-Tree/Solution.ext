/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
void solve(TreeNode* root, int val, int depth, int height)
{
    if(!root) return ;
    if(depth-1==height)
    {
        TreeNode* leftTree=root->left; TreeNode* rightTree=root->right;
        root->left=new TreeNode(val,leftTree,NULL);
        root->right=new TreeNode(val,NULL,rightTree);
        return;
    }
    solve(root->left,val,depth,height+1);
    solve(root->right,val,depth,height+1);
}
    TreeNode* addOneRow(TreeNode* root, int val, int depth) {
        if(depth==1)
        {
            TreeNode* newnode=new TreeNode(val,root,NULL);
            return newnode;
        }
        solve(root,val,depth,1);
        return root;
    }
};