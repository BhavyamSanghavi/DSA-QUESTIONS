/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
bool contain(int root, vector<int>& to_delete)
{
    for(int i=0;i<to_delete.size();i++)
    {
        if(root==to_delete[i]) return true;
    }
    return false;
}
void solve(vector<TreeNode*>& ans, TreeNode*& root, vector<int>& to_delete)
{
    if(root==NULL) return ;
    solve(ans,root->left,to_delete);
    solve(ans,root->right,to_delete);

    if(contain(root->val, to_delete))
    {
        if(root->left)
            ans.push_back(root->left);
        if(root->right)
            ans.push_back(root->right);
        root=NULL;
        delete root;
    }
    
}

    vector<TreeNode*> delNodes(TreeNode* root, vector<int>& to_delete) {
        vector<TreeNode*>ans;
        solve(ans,root,to_delete);
        if(root) ans.push_back(root);
        return ans;
    }
};