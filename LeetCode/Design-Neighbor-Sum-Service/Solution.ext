class neighborSum {
public:
int n=0;
vector<vector<int>>grid;
    neighborSum(vector<vector<int>>& m) {
        n=m.size();
        grid=m;
    }
    
    int adjacentSum(int value) {
        int sum=0;
        // int n=grid.size();
        for(int i=0;i<n;i++)
        {
            for(int j=0;j<n;j++)
            {
                if(grid[i][j]==value)
                {
                    if(j-1>=0) sum+=grid[i][j-1];
                    if(j+1<n) sum+=grid[i][j+1];
                    if(i+1<n ) sum+=grid[i+1][j];
                    if(i-1>=0) sum+=grid[i-1][j];
                }
            }
        }
        return sum;
    }
    
    int diagonalSum(int value) {
        int sum=0;
        int n=grid.size();
        for(int i=0;i<n;i++)
        {
            for(int j=0;j<n;j++)
            {
                if(grid[i][j]==value)
                {
                    if(j-1>=0 && i-1>=0) sum+=grid[i-1][j-1];
                    if(j+1<n && i-1>=0) sum+=grid[i-1][j+1];
                    if(i+1<n && j+1<n) sum+=grid[i+1][j+1];
                    if(i+1<n && j-1>=0) sum+=grid[i+1][j-1];
                }
            }
        }
        return sum;
    }
};

/**
 * Your neighborSum object will be instantiated and called as such:
 * neighborSum* obj = new neighborSum(grid);
 * int param_1 = obj->adjacentSum(value);
 * int param_2 = obj->diagonalSum(value);
 */